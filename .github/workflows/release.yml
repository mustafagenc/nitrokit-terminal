name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: nitrokit
            asset_name: nitrokit-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: nitrokit.exe
            asset_name: nitrokit-windows-x86_64.exe
          - os: macos-13  # Intel macOS
            target: x86_64-apple-darwin
            binary_name: nitrokit
            asset_name: nitrokit-macos-x86_64
          - os: macos-14  # Apple Silicon macOS (M1/M2)
            target: aarch64-apple-darwin
            binary_name: nitrokit
            asset_name: nitrokit-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # macOS için target ekleme gereksiz (native build)
      - name: Add target (non-macOS)
        if: matrix.os != 'macos-13' && matrix.os != 'macos-14'
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          # macOS için OpenSSL kurulumu
          brew install openssl
          echo "OPENSSL_DIR=/opt/homebrew/opt/openssl" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/openssl/lib/pkgconfig" >> $GITHUB_ENV

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      # Native build (her platform kendi target'ında)
      - name: Build release
        run: cargo build --release

      - name: Prepare binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/release/${{ matrix.binary_name }} ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}

      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          copy target\release\${{ matrix.binary_name }} ${{ matrix.asset_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}
          if-no-files-found: error
          retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to root
        run: |
          find artifacts -name "nitrokit-*" -exec mv {} . \;
          ls -la nitrokit-*

      - name: Generate release notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -n "$PREVIOUS_TAG" ]; then
            COMMIT_RANGE="${PREVIOUS_TAG}..HEAD"
          else
            COMMIT_RANGE="HEAD"
          fi
          
          {
            echo "RELEASE_NOTES<<EOF"
            echo "## 🚀 What's New in ${{ github.ref_name }}"
            echo ""
            
            if [ -n "$PREVIOUS_TAG" ]; then
              echo "### 📝 Changes since $PREVIOUS_TAG"
            else
              echo "### 📝 Initial Release"
            fi
            echo ""
            
            git log $COMMIT_RANGE --pretty=format:"- %s" --no-merges | head -20
            echo ""
            echo ""
            echo "## 📥 Downloads"
            echo ""
            echo "Choose the binary for your platform:"
            echo ""
            echo "| Platform | Download |"
            echo "|----------|----------|"
            echo "| Windows (x64) | [\`nitrokit-windows-x86_64.exe\`](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nitrokit-windows-x86_64.exe) |"
            echo "| macOS (Intel) | [\`nitrokit-macos-x86_64\`](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nitrokit-macos-x86_64) |"
            echo "| macOS (Apple Silicon) | [\`nitrokit-macos-arm64\`](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nitrokit-macos-arm64) |"
            echo "| Linux (x64) | [\`nitrokit-linux-x86_64\`](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nitrokit-linux-x86_64) |"
            echo ""
            echo "## 🛠️ Installation"
            echo ""
            echo "### macOS/Linux"
            echo "\`\`\`bash"
            echo "# Download and install"
            echo "curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nitrokit-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m) -o nitrokit"
            echo "chmod +x nitrokit"
            echo "sudo mv nitrokit /usr/local/bin/"
            echo "\`\`\`"
            echo ""
            echo "### Windows"
            echo "\`\`\`powershell"
            echo "# Download nitrokit-windows-x86_64.exe and add to PATH"
            echo "\`\`\`"
            echo ""
            echo "### Using Cargo"
            echo "\`\`\`bash"
            echo "cargo install nitrokit"
            echo "\`\`\`"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "🚀 NitroKit ${{ github.ref_name }}"
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          files: |
            nitrokit-linux-x86_64
            nitrokit-windows-x86_64.exe
            nitrokit-macos-x86_64
            nitrokit-macos-arm64
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}